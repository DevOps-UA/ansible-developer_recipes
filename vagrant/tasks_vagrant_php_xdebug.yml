- name: XDebug | Make temporary directory
  shell: echo `mktemp -d 2>/dev/null || mktemp -d -t 'mytmpdir'`
  register: xdebug_workspace

- name: XDebug | Detect module path
  shell: echo `php -i | grep extension_dir | awk '{print $(NF)}'`
  register: php_module_path

- name: XDebug | Detect ini path
  shell: echo `php -i | grep "Scan this dir for additional .ini files" | awk '{print $(NF)}'`
  register: php_extension_conf_path


- name: XDebug | Download Xdebug.
  get_url:
    url: "http://xdebug.org/files/xdebug-{{ php_xdebug_version }}.tgz"
    dest: "{{ xdebug_workspace }}"

- name: XDebug | Untar Xdebug.
  command: >
    tar -C {{ workspace }} -xvzf {{ workspace }}/xdebug-{{ php_xdebug_version }}.tgz
    creates={{ xdebug_workspace }}/xdebug-{{ php_xdebug_version }}/README

- name: XDebug | Build Xdebug.
  shell: >
    {{ item }}
    chdir={{ xdebug_workspace }}/xdebug-{{ php_xdebug_version }}
    creates={{ xdebug_workspace }}/xdebug-{{ php_xdebug_version }}/modules/xdebug.so
  with_items:
    - phpize
    - ./configure
    - make
  notify: restart apache2

- name: XDebug | Ensure php module path exists.
  file:
    path: "{{ php_module_path }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: XDebug | Move Xdebug module into place.
  shell: >
    cp {{ xdebug_workspace }}/xdebug-{{ php_xdebug_version }}/modules/xdebug.so {{ php_module_path }}/xdebug.so
    creates={{ php_module_path }}/xdebug.so
  sudo: yes
  notify: restart apache2

- name: XDebug | Copy xdebug INI into php.d folder.
  template:
    src: "{{root_dir}}/files/php_xdebug/xdebug.ini.j2"
    dest: "{{ php_extension_conf_path }}/xdebug.ini"
    owner: root
    group: root
    mode: 0644
  sudo: yes
  notify: restart apache2
